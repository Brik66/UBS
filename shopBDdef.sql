-- MySQL Script generated by MySQL Workbench
-- Thu Jul  8 14:27:44 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema UrbanBarberBDdef
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `UrbanBarberBDdef` ;

-- -----------------------------------------------------
-- Schema UrbanBarberBDdef
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `UrbanBarberBDdef` DEFAULT CHARACTER SET utf8 ;
USE `UrbanBarberBDdef` ;

-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`bodega`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`bodega` (
  `id_bodega` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(300) NULL,
  `existencias` INT NULL,
  PRIMARY KEY (`id_bodega`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`producto` (
  `id_producto` INT NOT NULL AUTO_INCREMENT,
  `bodega_id_bodega` INT NOT NULL,
  `nombre_producto` VARCHAR(300) NULL,
  `descripcion` VARCHAR(200) NULL,
  `precio` FLOAT NULL,
  `cantidad` INT NULL,
  PRIMARY KEY (`id_producto`),
  CONSTRAINT `fk_producto_bodega1`
    FOREIGN KEY (`bodega_id_bodega`)
    REFERENCES `UrbanBarberBDdef`.`bodega` (`id_bodega`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_producto_bodega1_idx` ON `UrbanBarberBDdef`.`producto` (`bodega_id_bodega` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`servicio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`servicio` (
  `id_servicio` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `descripcion` VARCHAR(300) NULL,
  `costo` FLOAT NULL,
  PRIMARY KEY (`id_servicio`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`estado_asignacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`estado_asignacion` (
  `id_estado_asignacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(100) NULL,
  PRIMARY KEY (`id_estado_asignacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`ciudad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`ciudad` (
  `numero_ciudad` INT NOT NULL AUTO_INCREMENT,
  `nombre_ciudad` VARCHAR(300) NULL,
  PRIMARY KEY (`numero_ciudad`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`tipo_rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`tipo_rol` (
  `numero_rol` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`numero_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`tipo_identificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`tipo_identificacion` (
  `id_tipo_identificacion` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(200) NULL,
  PRIMARY KEY (`id_tipo_identificacion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`tipo_telefono`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`tipo_telefono` (
  `numero_tipo_telefono` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(45) NULL,
  PRIMARY KEY (`numero_tipo_telefono`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `apellido` VARCHAR(100) NULL,
  `contrasena` VARCHAR(150) NULL,
  `correo` VARCHAR(300) NULL,
  `ciudad_numero_ciudad` INT NOT NULL,
  `tipo_rol_numero_rol` INT NOT NULL,
  `tipo_identificacion_id_tipo_identificacion` INT NOT NULL,
  `numero_documento` VARCHAR(150) NULL,
  `tipo_telefono_numero_tipo_telefono` INT NOT NULL,
  `numero_telefono` VARCHAR(150) NULL,
  PRIMARY KEY (`id_usuario`),
  CONSTRAINT `fk_usuario_ciudad1`
    FOREIGN KEY (`ciudad_numero_ciudad`)
    REFERENCES `UrbanBarberBDdef`.`ciudad` (`numero_ciudad`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_tipo_rol1`
    FOREIGN KEY (`tipo_rol_numero_rol`)
    REFERENCES `UrbanBarberBDdef`.`tipo_rol` (`numero_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_tipo_identificacion1`
    FOREIGN KEY (`tipo_identificacion_id_tipo_identificacion`)
    REFERENCES `UrbanBarberBDdef`.`tipo_identificacion` (`id_tipo_identificacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_usuario_tipo_telefono1`
    FOREIGN KEY (`tipo_telefono_numero_tipo_telefono`)
    REFERENCES `UrbanBarberBDdef`.`tipo_telefono` (`numero_tipo_telefono`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_usuario_ciudad1_idx` ON `UrbanBarberBDdef`.`usuario` (`ciudad_numero_ciudad` ASC);

CREATE INDEX `fk_usuario_tipo_rol1_idx` ON `UrbanBarberBDdef`.`usuario` (`tipo_rol_numero_rol` ASC);

CREATE INDEX `fk_usuario_tipo_identificacion1_idx` ON `UrbanBarberBDdef`.`usuario` (`tipo_identificacion_id_tipo_identificacion` ASC);

CREATE INDEX `fk_usuario_tipo_telefono1_idx` ON `UrbanBarberBDdef`.`usuario` (`tipo_telefono_numero_tipo_telefono` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`cita`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`cita` (
  `id_cita` INT NOT NULL AUTO_INCREMENT,
  `fecha_cita` TIMESTAMP NULL,
  `estado_asignacion_id_estado_asignacion` INT NOT NULL,
  `usuario_id_usuario` INT NOT NULL,
  `servicio_id_servicio` INT NOT NULL,
  PRIMARY KEY (`id_cita`),
  CONSTRAINT `fk_cita_estado_asignacion1`
    FOREIGN KEY (`estado_asignacion_id_estado_asignacion`)
    REFERENCES `UrbanBarberBDdef`.`estado_asignacion` (`id_estado_asignacion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cita_usuario1`
    FOREIGN KEY (`usuario_id_usuario`)
    REFERENCES `UrbanBarberBDdef`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cita_servicio1`
    FOREIGN KEY (`servicio_id_servicio`)
    REFERENCES `UrbanBarberBDdef`.`servicio` (`id_servicio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_cita_estado_asignacion1_idx` ON `UrbanBarberBDdef`.`cita` (`estado_asignacion_id_estado_asignacion` ASC);

CREATE INDEX `fk_cita_usuario1_idx` ON `UrbanBarberBDdef`.`cita` (`usuario_id_usuario` ASC);

CREATE INDEX `fk_cita_servicio1_idx` ON `UrbanBarberBDdef`.`cita` (`servicio_id_servicio` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`proveedor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`proveedor` (
  `numero_proveedor` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `apellidos` VARCHAR(100) NULL,
  `correo` VARCHAR(300) NULL,
  `direccion` VARCHAR(300) NULL,
  PRIMARY KEY (`numero_proveedor`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`detalle_pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`detalle_pedido` (
  `numero_detalle` INT NOT NULL AUTO_INCREMENT,
  `cantidad_solicitada` INT NULL,
  `fecha_solicitud` TIMESTAMP NULL,
  `producto_id_producto` INT NOT NULL,
  `costo_total` FLOAT NULL,
  `proveedor_numero_proveedor` INT NOT NULL,
  PRIMARY KEY (`numero_detalle`),
  CONSTRAINT `fk_detalle_pedido_producto1`
    FOREIGN KEY (`producto_id_producto`)
    REFERENCES `UrbanBarberBDdef`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_pedido_proveedor1`
    FOREIGN KEY (`proveedor_numero_proveedor`)
    REFERENCES `UrbanBarberBDdef`.`proveedor` (`numero_proveedor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_detalle_pedido_producto1_idx` ON `UrbanBarberBDdef`.`detalle_pedido` (`producto_id_producto` ASC);

CREATE INDEX `fk_detalle_pedido_proveedor1_idx` ON `UrbanBarberBDdef`.`detalle_pedido` (`proveedor_numero_proveedor` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`pedido`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`pedido` (
  `numero_pedido` INT NOT NULL AUTO_INCREMENT,
  `fecha_recibida` TIMESTAMP NULL,
  `usuario_id_usuario` INT NOT NULL,
  `detalle_pedido_numero_detalle` INT NOT NULL,
  PRIMARY KEY (`numero_pedido`),
  CONSTRAINT `fk_pedido_usuario1`
    FOREIGN KEY (`usuario_id_usuario`)
    REFERENCES `UrbanBarberBDdef`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_detalle_pedido1`
    FOREIGN KEY (`detalle_pedido_numero_detalle`)
    REFERENCES `UrbanBarberBDdef`.`detalle_pedido` (`numero_detalle`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_pedido_usuario1_idx` ON `UrbanBarberBDdef`.`pedido` (`usuario_id_usuario` ASC);

CREATE INDEX `fk_pedido_detalle_pedido1_idx` ON `UrbanBarberBDdef`.`pedido` (`detalle_pedido_numero_detalle` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`factura` (
  `id_factura` INT NOT NULL AUTO_INCREMENT,
  `costo` VARCHAR(45) NULL,
  `cita_id_cita` INT NOT NULL,
  PRIMARY KEY (`id_factura`),
  CONSTRAINT `fk_detalle_factura_cita1`
    FOREIGN KEY (`cita_id_cita`)
    REFERENCES `UrbanBarberBDdef`.`cita` (`id_cita`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_detalle_factura_cita1_idx` ON `UrbanBarberBDdef`.`factura` (`cita_id_cita` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`calificacion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`calificacion` (
  `id_calificacion` INT NOT NULL AUTO_INCREMENT,
  `puntaje` VARCHAR(45) NULL,
  `comentario` VARCHAR(300) NULL,
  `factura_id_factura` INT NOT NULL,
  PRIMARY KEY (`id_calificacion`),
  CONSTRAINT `fk_calificacion_factura1`
    FOREIGN KEY (`factura_id_factura`)
    REFERENCES `UrbanBarberBDdef`.`factura` (`id_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_calificacion_factura1_idx` ON `UrbanBarberBDdef`.`calificacion` (`factura_id_factura` ASC);


-- -----------------------------------------------------
-- Table `UrbanBarberBDdef`.`despacho_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UrbanBarberBDdef`.`despacho_producto` (
  `numero_despacho_producto` INT NOT NULL AUTO_INCREMENT,
  `fecha_solicitud` TIMESTAMP NULL,
  `cantidad_solicitada` INT NULL,
  `producto_id_producto` INT NOT NULL,
  `costo_total` FLOAT NULL,
  `usuario_id_usuario` INT NOT NULL,
  PRIMARY KEY (`numero_despacho_producto`),
  CONSTRAINT `fk_detalle_producto_producto1`
    FOREIGN KEY (`producto_id_producto`)
    REFERENCES `UrbanBarberBDdef`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_despacho_producto_usuario1`
    FOREIGN KEY (`usuario_id_usuario`)
    REFERENCES `UrbanBarberBDdef`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_detalle_producto_producto1_idx` ON `UrbanBarberBDdef`.`despacho_producto` (`producto_id_producto` ASC);

CREATE INDEX `fk_despacho_producto_usuario1_idx` ON `UrbanBarberBDdef`.`despacho_producto` (`usuario_id_usuario` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
